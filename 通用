local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

WindUI:Localization({
    Enabled = true,
    Prefix = "loc:",
    DefaultLanguage = "zh",
    Translations = {
        ["ru"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Пример",
            ["WELCOME"] = "Добро пожаловать в WindUI!",
            ["LIB_DESC"] = "Библиотека для создания красивых интерфейсов",
            ["SETTINGS"] = "Настройки",
            ["APPEARANCE"] = "Внешний вид",
            ["FEATURES"] = "Функционал",
            ["UTILITIES"] = "Инструменты",
            ["UI_ELEMENTS"] = "UI Элементы",
            ["CONFIGURATION"] = "Конфигурация",
            ["SAVE_CONFIG"] = "Сохранить конфигурацию",
            ["LOAD_CONFIG"] = "Загрузить конфигурацию",
            ["THEME_SELECT"] = "Выберите тему",
            ["TRANSPARENCY"] = "Прозрачность окна"
        },
        ["en"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Example",
            ["WELCOME"] = "Welcome to WindUI!",
            ["LIB_DESC"] = "Beautiful UI library for Roblox",
            ["SETTINGS"] = "Settings",
            ["APPEARANCE"] = "Appearance",
            ["FEATURES"] = "Features",
            ["UTILITIES"] = "Utilities",
            ["UI_ELEMENTS"] = "UI Elements",
            ["CONFIGURATION"] = "Configuration",
            ["SAVE_CONFIG"] = "Save Configuration",
            ["LOAD_CONFIG"] = "Load Configuration",
            ["THEME_SELECT"] = "Select Theme",
            ["TRANSPARENCY"] = "Window Transparency"
        },
        ["zh"] = { -- 添加中文翻译
            ["WINDUI_EXAMPLE"] = "WindUI 示例",
            ["WELCOME"] = "欢迎使用 WindUI！",
            ["LIB_DESC"] = "用于 Roblox 的优美 UI 库",
            ["SETTINGS"] = "设置",
            ["APPEARANCE"] = "外观",
            ["FEATURES"] = "功能",
            ["UTILITIES"] = "工具",
            ["UI_ELEMENTS"] = "UI 元素",
            ["CONFIGURATION"] = "配置",
            ["SAVE_CONFIG"] = "保存配置",
            ["LOAD_CONFIG"] = "加载配置",
            ["THEME_SELECT"] = "选择主题",
            ["TRANSPARENCY"] = "窗口透明度"
        }
    }
})

WindUI.TransparencyValue = 0.2
WindUI:SetTheme("Dark")

local function gradient(text, startColor, endColor)
    local result = ""
    for i = 1, #text do
        local t = (i - 1) / (#text - 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        result = result .. string.format('<font color="rgb(%d,%d,%d)">%s</font>', r, g, b, text:sub(i, i))
    end
    return result
end

--[[WindUI:Popup({
    Title = gradient("MP hub", Color3.fromHex("#6A11CB"), Color3.fromHex("#2575FC")), -- 标题汉化
    Icon = "sparkles",
    Content = "可以使用了吧😋😋😋", -- 使用本地化键
    Buttons = {
        {
            Title = "开始使用", -- 按钮汉化
            Icon = "arrow-right",
            Variant = "Primary",
            Callback = function() end
        }
    }
})

]]
-- 添加你的服务以获取密钥
--[[
WindUI.Services.mysuperservicetogetkey = {
    Name = "我的超级服务", -- 服务名汉化
    Icon = "droplet", -- lucide 或 rbxassetid 或原始图片链接
    
    Args = { "ServiceId" }, --       <- \
    --                                   |
    -- 重要!!!!!!!!!!!!!!!               |
    New = function(ServiceId) -- <------ | 参数!!!!!!!!!!!!
        
        function validateKey(key) -- <--- 这个也很重要!!!
            -- 验证密钥的函数
            -- 查看示例请访问 src/utils/
            
            if not key then
                return false, "密钥无效！" -- 错误信息汉化
                
            end
            
            return true, "密钥有效！" -- 成功信息汉化
        end
        
        function copyLink()
            return setclipboard("密钥系统服务的链接。") -- 提示信息汉化
        end
        
        return {
            -- ↓ 不要修改这个!!1!1!1!1!1!!1!100
            Verify = validateKey, -- <-----  这个也非常重要!!!!!
            Copy = copyLink -- <-------- 重要!1!1!1!1!1!1!11!
            -- ↑ 不要修改这个!!1!1!1!1!1!!1!100
        }
    end
}
]]

local Window = WindUI:CreateWindow({
    Title = "MP hub", -- 使用本地化键
    Icon = "palette",
    Author = "测试版", -- 使用本地化键
    Folder = "WindUI_Example",
    Size = UDim2.fromOffset(580, 490),
    Theme = "Dark",
    Background = IP,
    -- Background = WindUI:Gradient({
    --     ["0"] = { Color = Color3.fromHex("#0f0c29"), Transparency = 1 },
    --     ["100"] = { Color = Color3.fromHex("#302b63"), Transparency = 0.9 },
    -- }, {
    --     Rotation = 45,
    -- }),
    --Background = "video:https://cdn.discordapp.com/attachments/1337368451865645096/1402703845657673878/VID_20250616_180732_158.webm?ex=68958a01&is=68943881&hm=164c5b04d1076308b38055075f7eb0653c1d73bec9bcee08e918a31321fe3058&",
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            WindUI:Notify({
                Title = "用户资料", -- 通知标题汉化
                Content = "用户资料被点击了！", -- 通知内容汉化
                Duration = 3
            })
        end
    },
    SideBarWidth = 200,
    -- KeySystem = { -- <- ↓ 如果不需要密钥系统，请删除所有这些内容
    --     -- Key = { "1234", "5678" },  
    --     Note = "示例密钥系统。包含 Platoboost 等。", -- 注释汉化
    --     -- URL = "https://github.com/Footagesus/WindUI",
    --     -- Thumbnail = {
    --     --     Image = "rbxassetid://",
    --     --     Title = "缩略图", -- 缩略图标题汉化
    --     -- },
    --     API = {
    --         {   
    --             -- Title = "Platoboost", -- 可选 
    --             -- Desc = "点击复制。", -- 可选，汉化
    --             -- Icon = "rbxassetid://", -- 可选
                
    --             Type = "platoboost", -- 类型: platoboost, ...
    --             ServiceId = 5541, -- 服务 ID
    --             Secret = "1eda3b70-aab4-4394-82e4-4e7f507ae198", -- platoboost 密钥
    --         },
    --         {   
    --             -- Title = "其他服务", -- 可选，汉化 
    --             -- Desc = nil, -- 可选
    --             -- Icon = "rbxassetid://", -- 可选
                
    --             Type = "pandadevelopment", -- 类型: platoboost, ...
    --             ServiceId = "windui", -- 服务 ID
    --         },
    --         {   
    --             Type = "luarmor",
    --             ScriptId = "...",
    --             Discord = "https://discord.com/invite/...",
    --         },
    --         { -- 自定义服务 ( ↑↑ 查看第 73 行 ↑↑ )
    --             Type = "mysuperservicetogetkey",
    --             ServiceId = 42,
    --         }
    --     },
    --     SaveKey = true,
    -- },
})

Window:Tag({
    Title = "v1.6.4",
    Color = Color3.fromHex("#30ff6a")
})
Window:Tag({
    Title = "测试版", -- 标签汉化
    Color = Color3.fromHex("#315dff")
})
local TimeTag = Window:Tag({
    Title = "00:00",
    Color = Color3.fromHex("#000000")
})

local hue = 0

task.spawn(function()
	while true do
		local now = os.date("*t")
		local hours = string.format("%02d", now.hour)
		local minutes = string.format("%02d", now.min)
		
		hue = (hue + 0.01) % 1
		local color = Color3.fromHSV(hue, 1, 1)
		
		TimeTag:SetTitle(hours .. ":" .. minutes)
		TimeTag:SetColor(color)

		task.wait(0.06)
	end
end)


Window:CreateTopbarButton("theme-switcher", "moon", function()
    WindUI:SetTheme(WindUI:GetCurrentTheme() == "Dark" and "Light" or "Dark")
    WindUI:Notify({
        Title = "主题已更改", -- 通知标题汉化
        Content = "当前主题: "..WindUI:GetCurrentTheme(), -- 通知内容汉化
        Duration = 2
    })
end, 990)

local Tabs = {
    Main = Window:Section({ Title = " UI示例", Opened = true }), -- 使用本地化键
    Settings = Window:Section({ Title = "设置", Opened = true }), -- 使用本地化键
    Utilities = Window:Section({ Title = "配置方面", Opened = true }) -- 使用本地化键
}

local TabHandles = {
    Elements = Tabs.Main:Tab({ Title = "示例", Icon = "layout-grid", Desc = "UI 元素示例" }), -- 标题使用本地化键，描述汉化
    Appearance = Tabs.Settings:Tab({ Title = " Ui配置功能", Icon = "brush" }), -- 使用本地化键
    Config = Tabs.Utilities:Tab({ Title = "配置方面", Icon = "settings" }) -- 使用本地化键
}

TabHandles.Elements:Paragraph({
    Title = "交互式组件", -- 段落标题汉化
    Desc = "探索 WindUI 强大的元素", -- 描述汉化
    Image = "component",
    ImageSize = 20,
    Color = Color3.fromHex("#30ff6a"),
})

TabHandles.Elements:Divider()

--[[local modeDropdown = TabHandles.Elements:Dropdown({
    Title = "选择背景",
    Values = { "海豚", "猫羽雫1", "猫羽雫2" },
    Value = "无",
    Callback = function(option)
        local backgroundId
        if option == "猫羽雫1" then
            IP = "rbxassetid://98446137628032"
        elseif option == "猫羽雫2" then
            IP = "rbxassetid://130923340937036"
        else
            IP = "rbxassetid://113786259584052"
        end
        WindUI:Notify({
            Title = "背景已更改",
            Content = "已选择: "..option,
            Duration = 2
        })
    end
})
]]
TabHandles.Config:Paragraph({
    Title = "配置管理器", -- 段落标题汉化
    Desc = "保存和加载您的设置", -- 描述汉化
    Image = "save",
    ImageSize = 20,
    Color = "White"
})

local configName = "default"
local configFile = nil
local MyPlayerData = {
    name = "玩家1", -- 玩家名汉化
    level = 1,
    inventory = { "剑", "盾牌", "药水" } -- 物品汉化
}

TabHandles.Config:Input({
    Title = "配置名称", -- 输入框标题汉化
    Value = configName,
    Callback = function(value)
        configName = value or "default"
    end
})

local ConfigManager = Window.ConfigManager
if ConfigManager then
    ConfigManager:Init(Window)
    
    TabHandles.Config:Button({
        Title = "保存配置", -- 使用本地化键
        Icon = "save",
        Variant = "Primary",
        Callback = function()
            configFile = ConfigManager:CreateConfig(configName)
            
            configFile:Register("featureToggle", featureToggle)
            configFile:Register("intensitySlider", intensitySlider)
            configFile:Register("modeDropdown", modeDropdown)
            configFile:Register("themeDropdown", themeDropdown)
            configFile:Register("transparencySlider", transparencySlider)
            
            configFile:Set("playerData", MyPlayerData)
            configFile:Set("lastSave", os.date("%Y-%m-%d %H:%M:%S"))
            
            if configFile:Save() then
                WindUI:Notify({ 
                    Title = "loc:SAVE_CONFIG", -- 使用本地化键
                    Content = "已保存为: "..configName, -- 内容部分汉化
                    Icon = "check",
                    Duration = 3
                })
            else
                WindUI:Notify({ 
                    Title = "错误", -- 通知标题汉化
                    Content = "保存配置失败", -- 通知内容汉化
                    Icon = "x",
                    Duration = 3
                })
            end
        end
    })

    TabHandles.Config:Button({
        Title = "加载配置", -- 使用本地化键
        Icon = "folder",
        Callback = function()
            configFile = ConfigManager:CreateConfig(configName)
            local loadedData = configFile:Load()
            
            if loadedData then
                if loadedData.playerData then
                    MyPlayerData = loadedData.playerData
                end
                
                local lastSave = loadedData.lastSave or "未知" -- 汉化
                WindUI:Notify({ 
                    Title = "loc:LOAD_CONFIG", -- 使用本地化键
                    Content = "已加载: "..configName.."\n上次保存: "..lastSave, -- 内容部分汉化
                    Icon = "refresh-cw",
                    Duration = 5
                })
                
                TabHandles.Config:Paragraph({
                    Title = "玩家数据", -- 段落标题汉化
                    Desc = string.format("名称: %s\n等级: %d\n库存: %s", 
                        MyPlayerData.name, 
                        MyPlayerData.level, 
                        table.concat(MyPlayerData.inventory, ", ")) -- 描述汉化
                })
            else
                WindUI:Notify({ 
                    Title = "错误", -- 通知标题汉化
                    Content = "加载配置失败", -- 通知内容汉化
                    Icon = "x",
                    Duration = 3
                })
            end
        end
    })
else
    TabHandles.Config:Paragraph({
        Title = "配置管理器不可用", -- 段落标题汉化
        Desc = "此功能需要 ConfigManager", -- 描述汉化
        Image = "alert-triangle",
        ImageSize = 20,
        Color = "White"
    })
end


local footerSection = Window:Section({ Title = "WindUI " .. WindUI.Version })
TabHandles.Config:Paragraph({
    Title = "用心创造 ❤️", -- 段落标题汉化
    Desc = "https://github.com/MP00N/MP-hub-Introduction/tree/main",
    Image = "github",
    ImageSize = 20,
    Color = "Grey",
    Buttons = {
        {
            Title = "复制链接", -- 按钮标题汉化
            Icon = "copy",
            Variant = "Tertiary",
            Callback = function()
                setclipboard("https://github.com/MP00N/MP-hub-Introduction/tree/main")
                WindUI:Notify({
                    Title = "已复制！", -- 通知标题汉化
                    Content = "GitHub 链接已复制到剪贴板", -- 通知内容汉化
                    Duration = 2
                })
            end
        }
    }
})

Window:OnClose(function()
    print("窗口已关闭") -- 输出信息汉化
    
    if ConfigManager and configFile then
        configFile:Set("playerData", MyPlayerData)
        configFile:Set("lastSave", os.date("%Y-%m-%d %H:%M:%S"))
        configFile:Save()
        print("关闭时自动保存配置") -- 输出信息汉化
    end
end)

Window:OnDestroy(function()
    print("窗口已销毁") -- 输出信息汉化
end)
